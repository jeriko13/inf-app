{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useRef, useCallback, useMemo, createContext, useContext, useReducer, useEffect, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { focusIn, Focus } from '../../utils/focus-management.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\n\nvar _reducers;\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"SetSelectedIndex\"] = 0] = \"SetSelectedIndex\";\n  ActionTypes[ActionTypes[\"SetOrientation\"] = 1] = \"SetOrientation\";\n  ActionTypes[ActionTypes[\"SetActivation\"] = 2] = \"SetActivation\";\n  ActionTypes[ActionTypes[\"RegisterTab\"] = 3] = \"RegisterTab\";\n  ActionTypes[ActionTypes[\"UnregisterTab\"] = 4] = \"UnregisterTab\";\n  ActionTypes[ActionTypes[\"RegisterPanel\"] = 5] = \"RegisterPanel\";\n  ActionTypes[ActionTypes[\"UnregisterPanel\"] = 6] = \"UnregisterPanel\";\n  ActionTypes[ActionTypes[\"ForceRerender\"] = 7] = \"ForceRerender\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.SetSelectedIndex] = function (state, action) {\n  if (state.selectedIndex === action.index) return state;\n  return _extends({}, state, {\n    selectedIndex: action.index\n  });\n}, _reducers[ActionTypes.SetOrientation] = function (state, action) {\n  if (state.orientation === action.orientation) return state;\n  return _extends({}, state, {\n    orientation: action.orientation\n  });\n}, _reducers[ActionTypes.SetActivation] = function (state, action) {\n  if (state.activation === action.activation) return state;\n  return _extends({}, state, {\n    activation: action.activation\n  });\n}, _reducers[ActionTypes.RegisterTab] = function (state, action) {\n  if (state.tabs.includes(action.tab)) return state;\n  return _extends({}, state, {\n    tabs: [].concat(state.tabs, [action.tab])\n  });\n}, _reducers[ActionTypes.UnregisterTab] = function (state, action) {\n  return _extends({}, state, {\n    tabs: state.tabs.filter(function (tab) {\n      return tab !== action.tab;\n    })\n  });\n}, _reducers[ActionTypes.RegisterPanel] = function (state, action) {\n  if (state.panels.includes(action.panel)) return state;\n  return _extends({}, state, {\n    panels: [].concat(state.panels, [action.panel])\n  });\n}, _reducers[ActionTypes.UnregisterPanel] = function (state, action) {\n  return _extends({}, state, {\n    panels: state.panels.filter(function (panel) {\n      return panel !== action.panel;\n    })\n  });\n}, _reducers[ActionTypes.ForceRerender] = function (state) {\n  return _extends({}, state);\n}, _reducers);\nvar TabsContext = /*#__PURE__*/createContext(null);\nTabsContext.displayName = 'TabsContext';\n\nfunction useTabsContext(component) {\n  var context = useContext(TabsContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <Tab.Group /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_TABS_TAG = Fragment;\n\nfunction Tabs(props) {\n  var _props$defaultIndex = props.defaultIndex,\n      defaultIndex = _props$defaultIndex === void 0 ? 0 : _props$defaultIndex,\n      _props$vertical = props.vertical,\n      vertical = _props$vertical === void 0 ? false : _props$vertical,\n      _props$manual = props.manual,\n      manual = _props$manual === void 0 ? false : _props$manual,\n      onChange = props.onChange,\n      _props$selectedIndex = props.selectedIndex,\n      selectedIndex = _props$selectedIndex === void 0 ? null : _props$selectedIndex,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"defaultIndex\", \"vertical\", \"manual\", \"onChange\", \"selectedIndex\"]);\n\n  var orientation = vertical ? 'vertical' : 'horizontal';\n  var activation = manual ? 'manual' : 'auto';\n\n  var _useReducer = useReducer(stateReducer, {\n    selectedIndex: null,\n    tabs: [],\n    panels: [],\n    orientation: orientation,\n    activation: activation\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var slot = useMemo(function () {\n    return {\n      selectedIndex: state.selectedIndex\n    };\n  }, [state.selectedIndex]);\n  var onChangeRef = useRef(function () {});\n  useEffect(function () {\n    dispatch({\n      type: ActionTypes.SetOrientation,\n      orientation: orientation\n    });\n  }, [orientation]);\n  useEffect(function () {\n    dispatch({\n      type: ActionTypes.SetActivation,\n      activation: activation\n    });\n  }, [activation]);\n  useEffect(function () {\n    if (typeof onChange === 'function') {\n      onChangeRef.current = onChange;\n    }\n  }, [onChange]);\n  useEffect(function () {\n    if (state.tabs.length <= 0) return;\n    if (selectedIndex === null && state.selectedIndex !== null) return;\n    var tabs = state.tabs.map(function (tab) {\n      return tab.current;\n    }).filter(Boolean);\n    var focusableTabs = tabs.filter(function (tab) {\n      return !tab.hasAttribute('disabled');\n    });\n    var indexToSet = selectedIndex != null ? selectedIndex : defaultIndex; // Underflow\n\n    if (indexToSet < 0) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[0])\n      });\n    } // Overflow\n    else if (indexToSet > state.tabs.length) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[focusableTabs.length - 1])\n      });\n    } // Middle\n    else {\n      var before = tabs.slice(0, indexToSet);\n      var after = tabs.slice(indexToSet);\n      var next = [].concat(after, before).find(function (tab) {\n        return focusableTabs.includes(tab);\n      });\n      if (!next) return;\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(next)\n      });\n    }\n  }, [defaultIndex, selectedIndex, state.tabs, state.selectedIndex]);\n  var lastChangedIndex = useRef(state.selectedIndex);\n  var providerBag = useMemo(function () {\n    return [state, {\n      dispatch: dispatch,\n      change: function change(index) {\n        if (lastChangedIndex.current !== index) onChangeRef.current(index);\n        lastChangedIndex.current = index;\n        dispatch({\n          type: ActionTypes.SetSelectedIndex,\n          index: index\n        });\n      }\n    }];\n  }, [state, dispatch]);\n  return React.createElement(TabsContext.Provider, {\n    value: providerBag\n  }, render({\n    props: _extends({}, passThroughProps),\n    slot: slot,\n    defaultTag: DEFAULT_TABS_TAG,\n    name: 'Tabs'\n  }));\n} // ---\n\n\nvar DEFAULT_LIST_TAG = 'div';\n\nfunction List(props) {\n  var _useTabsContext = useTabsContext([Tab.name, List.name].join('.')),\n      _useTabsContext$ = _useTabsContext[0],\n      selectedIndex = _useTabsContext$.selectedIndex,\n      orientation = _useTabsContext$.orientation;\n\n  var slot = {\n    selectedIndex: selectedIndex\n  };\n  var propsWeControl = {\n    role: 'tablist',\n    'aria-orientation': orientation\n  };\n  var passThroughProps = props;\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_LIST_TAG,\n    name: 'Tabs.List'\n  });\n} // ---\n\n\nvar DEFAULT_TAB_TAG = 'button';\n\nfunction Tab(props) {\n  var _panels$myIndex, _panels$myIndex$curre;\n\n  var id = \"headlessui-tabs-tab-\" + useId();\n\n  var _useTabsContext2 = useTabsContext(Tab.name),\n      _useTabsContext2$ = _useTabsContext2[0],\n      selectedIndex = _useTabsContext2$.selectedIndex,\n      tabs = _useTabsContext2$.tabs,\n      panels = _useTabsContext2$.panels,\n      orientation = _useTabsContext2$.orientation,\n      activation = _useTabsContext2$.activation,\n      _useTabsContext2$2 = _useTabsContext2[1],\n      dispatch = _useTabsContext2$2.dispatch,\n      change = _useTabsContext2$2.change;\n\n  var internalTabRef = useRef(null);\n  var tabRef = useSyncRefs(internalTabRef, function (element) {\n    if (!element) return;\n    dispatch({\n      type: ActionTypes.ForceRerender\n    });\n  });\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterTab,\n      tab: internalTabRef\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterTab,\n        tab: internalTabRef\n      });\n    };\n  }, [dispatch, internalTabRef]);\n  var myIndex = tabs.indexOf(internalTabRef);\n  var selected = myIndex === selectedIndex;\n  var handleKeyDown = useCallback(function (event) {\n    var list = tabs.map(function (tab) {\n      return tab.current;\n    }).filter(Boolean);\n\n    if (event.key === Keys.Space || event.key === Keys.Enter) {\n      event.preventDefault();\n      event.stopPropagation();\n      change(myIndex);\n      return;\n    }\n\n    switch (event.key) {\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return focusIn(list, Focus.First);\n\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return focusIn(list, Focus.Last);\n    }\n\n    return match(orientation, {\n      vertical: function vertical() {\n        if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround);\n        if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround);\n        return;\n      },\n      horizontal: function horizontal() {\n        if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround);\n        if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround);\n        return;\n      }\n    });\n  }, [tabs, orientation, myIndex, change]);\n  var handleFocus = useCallback(function () {\n    var _internalTabRef$curre;\n\n    (_internalTabRef$curre = internalTabRef.current) == null ? void 0 : _internalTabRef$curre.focus();\n  }, [internalTabRef]);\n  var handleSelection = useCallback(function () {\n    var _internalTabRef$curre2;\n\n    (_internalTabRef$curre2 = internalTabRef.current) == null ? void 0 : _internalTabRef$curre2.focus();\n    change(myIndex);\n  }, [change, myIndex, internalTabRef]);\n  var slot = useMemo(function () {\n    return {\n      selected: selected\n    };\n  }, [selected]);\n  var propsWeControl = {\n    ref: tabRef,\n    onKeyDown: handleKeyDown,\n    onFocus: activation === 'manual' ? handleFocus : handleSelection,\n    onClick: handleSelection,\n    id: id,\n    role: 'tab',\n    type: useResolveButtonType(props, internalTabRef),\n    'aria-controls': (_panels$myIndex = panels[myIndex]) == null ? void 0 : (_panels$myIndex$curre = _panels$myIndex.current) == null ? void 0 : _panels$myIndex$curre.id,\n    'aria-selected': selected,\n    tabIndex: selected ? 0 : -1\n  };\n  var passThroughProps = props;\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_TAB_TAG,\n    name: 'Tabs.Tab'\n  });\n} // ---\n\n\nvar DEFAULT_PANELS_TAG = 'div';\n\nfunction Panels(props) {\n  var _useTabsContext3 = useTabsContext([Tab.name, Panels.name].join('.')),\n      selectedIndex = _useTabsContext3[0].selectedIndex;\n\n  var slot = useMemo(function () {\n    return {\n      selectedIndex: selectedIndex\n    };\n  }, [selectedIndex]);\n  return render({\n    props: props,\n    slot: slot,\n    defaultTag: DEFAULT_PANELS_TAG,\n    name: 'Tabs.Panels'\n  });\n} // ---\n\n\nvar DEFAULT_PANEL_TAG = 'div';\nvar PanelRenderFeatures = Features.RenderStrategy | Features.Static;\n\nfunction Panel(props) {\n  var _tabs$myIndex, _tabs$myIndex$current;\n\n  var _useTabsContext4 = useTabsContext([Tab.name, Panel.name].join('.')),\n      _useTabsContext4$ = _useTabsContext4[0],\n      selectedIndex = _useTabsContext4$.selectedIndex,\n      tabs = _useTabsContext4$.tabs,\n      panels = _useTabsContext4$.panels,\n      dispatch = _useTabsContext4[1].dispatch;\n\n  var id = \"headlessui-tabs-panel-\" + useId();\n  var internalPanelRef = useRef(null);\n  var panelRef = useSyncRefs(internalPanelRef, function (element) {\n    if (!element) return;\n    dispatch({\n      type: ActionTypes.ForceRerender\n    });\n  });\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterPanel,\n      panel: internalPanelRef\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterPanel,\n        panel: internalPanelRef\n      });\n    };\n  }, [dispatch, internalPanelRef]);\n  var myIndex = panels.indexOf(internalPanelRef);\n  var selected = myIndex === selectedIndex;\n  var slot = useMemo(function () {\n    return {\n      selected: selected\n    };\n  }, [selected]);\n  var propsWeControl = {\n    ref: panelRef,\n    id: id,\n    role: 'tabpanel',\n    'aria-labelledby': (_tabs$myIndex = tabs[myIndex]) == null ? void 0 : (_tabs$myIndex$current = _tabs$myIndex.current) == null ? void 0 : _tabs$myIndex$current.id,\n    tabIndex: selected ? 0 : -1\n  };\n  var passThroughProps = props;\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: selected,\n    name: 'Tabs.Panel'\n  });\n} // ---\n\n\nTab.Group = Tabs;\nTab.List = List;\nTab.Panels = Panels;\nTab.Panel = Panel;\nexport { Tab };","map":{"version":3,"mappings":"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","names":["ActionTypes","reducers","SetSelectedIndex","state","action","selectedIndex","index","SetOrientation","orientation","SetActivation","activation","RegisterTab","tabs","includes","tab","UnregisterTab","filter","RegisterPanel","panels","panel","UnregisterPanel","ForceRerender","TabsContext","createContext","displayName","useTabsContext","component","context","useContext","err","Error","captureStackTrace","stateReducer","match","type","DEFAULT_TABS_TAG","Fragment","Tabs","props","defaultIndex","_props$defaultIndex","vertical","_props$vertical","manual","_props$manual","onChange","_props$selectedIndex","passThroughProps","useReducer","dispatch","slot","useMemo","onChangeRef","useRef","useEffect","current","length","map","Boolean","focusableTabs","hasAttribute","indexToSet","indexOf","before","slice","after","next","find","lastChangedIndex","providerBag","change","React","Provider","value","render","defaultTag","name","DEFAULT_LIST_TAG","List","Tab","join","propsWeControl","role","DEFAULT_TAB_TAG","id","useId","internalTabRef","tabRef","useSyncRefs","element","useIsoMorphicEffect","myIndex","selected","handleKeyDown","useCallback","event","list","key","Keys","Space","Enter","preventDefault","stopPropagation","Home","PageUp","focusIn","Focus","First","End","PageDown","Last","ArrowUp","Previous","WrapAround","ArrowDown","Next","horizontal","ArrowLeft","ArrowRight","handleFocus","focus","handleSelection","ref","onKeyDown","onFocus","onClick","useResolveButtonType","_panels$myIndex","_panels$myIndex$curre","tabIndex","DEFAULT_PANELS_TAG","Panels","DEFAULT_PANEL_TAG","PanelRenderFeatures","Features","RenderStrategy","Static","Panel","internalPanelRef","panelRef","_tabs$myIndex","_tabs$myIndex$current","features","visible","Group"],"sources":["/home/masdim/Documents/Projects/Website/inf-app/node_modules/@headlessui/react/src/components/tabs/tabs.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  useEffect,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  Dispatch,\n  ContextType,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render, Features, PropsForFeatures } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ninterface StateDefinition {\n  selectedIndex: number | null\n\n  orientation: 'horizontal' | 'vertical'\n  activation: 'auto' | 'manual'\n\n  tabs: MutableRefObject<HTMLElement | null>[]\n  panels: MutableRefObject<HTMLElement | null>[]\n}\n\nenum ActionTypes {\n  SetSelectedIndex,\n  SetOrientation,\n  SetActivation,\n\n  RegisterTab,\n  UnregisterTab,\n\n  RegisterPanel,\n  UnregisterPanel,\n\n  ForceRerender,\n}\n\ntype Actions =\n  | { type: ActionTypes.SetSelectedIndex; index: number }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.SetActivation; activation: StateDefinition['activation'] }\n  | { type: ActionTypes.RegisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.RegisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.ForceRerender }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetSelectedIndex](state, action) {\n    if (state.selectedIndex === action.index) return state\n    return { ...state, selectedIndex: action.index }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.SetActivation](state, action) {\n    if (state.activation === action.activation) return state\n    return { ...state, activation: action.activation }\n  },\n  [ActionTypes.RegisterTab](state, action) {\n    if (state.tabs.includes(action.tab)) return state\n    return { ...state, tabs: [...state.tabs, action.tab] }\n  },\n  [ActionTypes.UnregisterTab](state, action) {\n    return { ...state, tabs: state.tabs.filter(tab => tab !== action.tab) }\n  },\n  [ActionTypes.RegisterPanel](state, action) {\n    if (state.panels.includes(action.panel)) return state\n    return { ...state, panels: [...state.panels, action.panel] }\n  },\n  [ActionTypes.UnregisterPanel](state, action) {\n    return { ...state, panels: state.panels.filter(panel => panel !== action.panel) }\n  },\n  [ActionTypes.ForceRerender](state) {\n    return { ...state }\n  },\n}\n\nlet TabsContext = createContext<\n  [StateDefinition, { change(index: number): void; dispatch: Dispatch<Actions> }] | null\n>(null)\nTabsContext.displayName = 'TabsContext'\n\nfunction useTabsContext(component: string) {\n  let context = useContext(TabsContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_TABS_TAG = Fragment\ninterface TabsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Tabs<TTag extends ElementType = typeof DEFAULT_TABS_TAG>(\n  props: Props<TTag, TabsRenderPropArg> & {\n    defaultIndex?: number\n    onChange?: (index: number) => void\n    selectedIndex?: number\n    vertical?: boolean\n    manual?: boolean\n  }\n) {\n  let {\n    defaultIndex = 0,\n    vertical = false,\n    manual = false,\n    onChange,\n    selectedIndex = null,\n    ...passThroughProps\n  } = props\n  const orientation = vertical ? 'vertical' : 'horizontal'\n  const activation = manual ? 'manual' : 'auto'\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    selectedIndex: null,\n    tabs: [],\n    panels: [],\n    orientation,\n    activation,\n  } as StateDefinition)\n  let slot = useMemo(() => ({ selectedIndex: state.selectedIndex }), [state.selectedIndex])\n  let onChangeRef = useRef<(index: number) => void>(() => {})\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetOrientation, orientation })\n  }, [orientation])\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetActivation, activation })\n  }, [activation])\n\n  useEffect(() => {\n    if (typeof onChange === 'function') {\n      onChangeRef.current = onChange\n    }\n  }, [onChange])\n\n  useEffect(() => {\n    if (state.tabs.length <= 0) return\n    if (selectedIndex === null && state.selectedIndex !== null) return\n\n    let tabs = state.tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n    let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n    let indexToSet = selectedIndex ?? defaultIndex\n\n    // Underflow\n    if (indexToSet < 0) {\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(focusableTabs[0]) })\n    }\n\n    // Overflow\n    else if (indexToSet > state.tabs.length) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[focusableTabs.length - 1]),\n      })\n    }\n\n    // Middle\n    else {\n      let before = tabs.slice(0, indexToSet)\n      let after = tabs.slice(indexToSet)\n\n      let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n      if (!next) return\n\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(next) })\n    }\n  }, [defaultIndex, selectedIndex, state.tabs, state.selectedIndex])\n\n  let lastChangedIndex = useRef(state.selectedIndex)\n  let providerBag = useMemo<ContextType<typeof TabsContext>>(\n    () => [\n      state,\n      {\n        dispatch,\n        change(index: number) {\n          if (lastChangedIndex.current !== index) onChangeRef.current(index)\n          lastChangedIndex.current = index\n\n          dispatch({ type: ActionTypes.SetSelectedIndex, index })\n        },\n      },\n    ],\n    [state, dispatch]\n  )\n\n  return (\n    <TabsContext.Provider value={providerBag}>\n      {render({\n        props: { ...passThroughProps },\n        slot,\n        defaultTag: DEFAULT_TABS_TAG,\n        name: 'Tabs',\n      })}\n    </TabsContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_LIST_TAG = 'div' as const\ninterface ListRenderPropArg {\n  selectedIndex: number\n}\ntype ListPropsWeControl = 'role' | 'aria-orientation'\n\nfunction List<TTag extends ElementType = typeof DEFAULT_LIST_TAG>(\n  props: Props<TTag, ListRenderPropArg, ListPropsWeControl> & {}\n) {\n  let [{ selectedIndex, orientation }] = useTabsContext([Tab.name, List.name].join('.'))\n\n  let slot = { selectedIndex }\n  let propsWeControl = {\n    role: 'tablist',\n    'aria-orientation': orientation,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LIST_TAG,\n    name: 'Tabs.List',\n  })\n}\n\n// ---\n\nlet DEFAULT_TAB_TAG = 'button' as const\ninterface TabRenderPropArg {\n  selected: boolean\n}\ntype TabPropsWeControl = 'id' | 'role' | 'type' | 'aria-controls' | 'aria-selected' | 'tabIndex'\n\nexport function Tab<TTag extends ElementType = typeof DEFAULT_TAB_TAG>(\n  props: Props<TTag, TabRenderPropArg, TabPropsWeControl>\n) {\n  let id = `headlessui-tabs-tab-${useId()}`\n\n  let [\n    { selectedIndex, tabs, panels, orientation, activation },\n    { dispatch, change },\n  ] = useTabsContext(Tab.name)\n\n  let internalTabRef = useRef<HTMLElement>(null)\n  let tabRef = useSyncRefs(internalTabRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterTab, tab: internalTabRef })\n    return () => dispatch({ type: ActionTypes.UnregisterTab, tab: internalTabRef })\n  }, [dispatch, internalTabRef])\n\n  let myIndex = tabs.indexOf(internalTabRef)\n  let selected = myIndex === selectedIndex\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      let list = tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        change(myIndex)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(orientation, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    },\n    [tabs, orientation, myIndex, change]\n  )\n\n  let handleFocus = useCallback(() => {\n    internalTabRef.current?.focus()\n  }, [internalTabRef])\n\n  let handleSelection = useCallback(() => {\n    internalTabRef.current?.focus()\n    change(myIndex)\n  }, [change, myIndex, internalTabRef])\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: tabRef,\n    onKeyDown: handleKeyDown,\n    onFocus: activation === 'manual' ? handleFocus : handleSelection,\n    onClick: handleSelection,\n    id,\n    role: 'tab',\n    type: useResolveButtonType(props, internalTabRef),\n    'aria-controls': panels[myIndex]?.current?.id,\n    'aria-selected': selected,\n    tabIndex: selected ? 0 : -1,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TAB_TAG,\n    name: 'Tabs.Tab',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANELS_TAG = 'div' as const\ninterface PanelsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Panels<TTag extends ElementType = typeof DEFAULT_PANELS_TAG>(\n  props: Props<TTag, PanelsRenderPropArg>\n) {\n  let [{ selectedIndex }] = useTabsContext([Tab.name, Panels.name].join('.'))\n\n  let slot = useMemo(() => ({ selectedIndex }), [selectedIndex])\n\n  return render({\n    props,\n    slot,\n    defaultTag: DEFAULT_PANELS_TAG,\n    name: 'Tabs.Panels',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  selected: boolean\n}\ntype PanelPropsWeControl = 'id' | 'role' | 'aria-labelledby' | 'tabIndex'\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nfunction Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>\n) {\n  let [{ selectedIndex, tabs, panels }, { dispatch }] = useTabsContext(\n    [Tab.name, Panel.name].join('.')\n  )\n\n  let id = `headlessui-tabs-panel-${useId()}`\n  let internalPanelRef = useRef<HTMLElement>(null)\n  let panelRef = useSyncRefs(internalPanelRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterPanel, panel: internalPanelRef })\n    return () => dispatch({ type: ActionTypes.UnregisterPanel, panel: internalPanelRef })\n  }, [dispatch, internalPanelRef])\n\n  let myIndex = panels.indexOf(internalPanelRef)\n  let selected = myIndex === selectedIndex\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: panelRef,\n    id,\n    role: 'tabpanel',\n    'aria-labelledby': tabs[myIndex]?.current?.id,\n    tabIndex: selected ? 0 : -1,\n  }\n\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: selected,\n    name: 'Tabs.Panel',\n  })\n}\n\n// ---\n\nTab.Group = Tabs\nTab.List = List\nTab.Panels = Panels\nTab.Panel = Panel\n"]},"metadata":{},"sourceType":"module"}